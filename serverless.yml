service: apple-health

provider:
  name: aws
  runtime: python3.9
  region: ap-southeast-2
  layers:
    - arn:aws:lambda:ap-southeast-2:336392948345:layer:AWSSDKPandas-Python39-Arm64:5
  apiGateway:
    shouldStartNameWithService: false
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:*"
      Resource:
        Fn::Join: ["", [Fn::GetAtt: [MyBucket, Arn]]]
    - Effect: "Allow"
      Action:
        - "s3:*"
      Resource:
        Fn::Join: ["", [Fn::GetAtt: [MyBucket, Arn], "/*"]]

custom:
  wsgi:
    app: healthlake.app
    dockerizePip: true
  pythonRequirements:
    dockerizePip: true
    layer:
      name: apple-health
      description: "apple-health-* package requirements"
      compatibleRuntimes:
        - python3.9
      slim: true
      slimPatterns:
        - "**/*.egg-info*"

package:
  patterns:
    - "!node_modules/**"
    - "!venv/**"
    - "!__pycache__/**"
  excludeDevDependencies: true

resources:
  Resources:
    MyBucket:
      Type: AWS::S3::Bucket
      DeletionPolicy: Retain
      Properties:
        BucketName: "ntonthat-apple-health-data"

plugins:
  - serverless-wsgi
  - serverless-python-requirements

functions:
  healthlake:
    handler: wsgi_handler.handler
    layers:
      - !Ref PythonRequirementsLambdaLayer
    events:
      - http: ANY /
      - http: "ANY /{proxy+}"

  parse_parquet:
    handler: parse_parquet.run
    layers:
      - !Ref PythonRequirementsLambdaLayer
    events:
      - s3:
          bucket: "ntonthat-apple-health-data"
          event: s3:ObjectCreated:*
          rules:
            - prefix: syncs/
            - suffix: .json
          existing: true

  create_calendar:
    handler: create_calendar.run
    layers:
      - !Ref PythonRequirementsLambdaLayer
    package:
      patterns:
        - config/mapping.json
    events:
      - s3:
          bucket: "ntonthat-apple-health-data"
          event: s3:ObjectCreated:*
          rules:
            - prefix: outputs/
            - suffix: .parquet
          existing: true
